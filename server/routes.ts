import type { Express } from "express";
import { createServer, type Server } from "http";
import { storage } from "./storage";
import { insertContactMessageSchema } from "@shared/schema";
import { sendContactEmail } from "./email";
import { z } from "zod";

export async function registerRoutes(app: Express): Promise<Server> {
  
  // Contact form submission
  app.post("/api/contact", async (req, res) => {
    try {
      const validatedData = insertContactMessageSchema.parse(req.body);
      
      const message = await storage.createContactMessage(validatedData);
      
      // √úzenet r√©szletes napl√≥z√°sa
      console.log("\n" + "=".repeat(60));
      console.log("üîî √öJ √úZENET √âRKEZETT A WEBOLDALR√ìL!");
      console.log("=".repeat(60));
      console.log(`üìß N√©v: ${validatedData.name}`);
      console.log(`üì¨ Email: ${validatedData.email}`);
      console.log(`üìã T√°rgy: ${validatedData.subject}`);
      console.log(`üïê Id≈ëpont: ${new Date().toLocaleString('hu-HU')}`);
      console.log("-".repeat(60));
      console.log("üìù √úZENET TARTALMA:");
      console.log(validatedData.message);
      console.log("=".repeat(60) + "\n");
      
      // Email k√ºld√©si k√≠s√©rlet - de tov√°bbra is m≈±k√∂dik az oldal email n√©lk√ºl is
      let emailSent = false;
      try {
        emailSent = await sendContactEmail({
          name: validatedData.name,
          email: validatedData.email,
          subject: validatedData.subject,
          message: validatedData.message
        });
      } catch (error) {
        console.log("‚ö†Ô∏è SendGrid email k√ºld√©s sikertelen");
      }
      
      if (emailSent) {
        console.log("‚úÖ Email sikeresen elk√ºldve a kun.botond@icloud.com c√≠mre!");
      } else {
        console.log("üìå FONTOS: Az √ºzenet meg√©rkezett √©s t√°rolva van!");
        console.log("üí° Email automatikus tov√°bb√≠t√°s: SendGrid be√°ll√≠t√°s sz√ºks√©ges");
      }
      
      res.json({ 
        success: true, 
        message: "K√∂sz√∂n√∂m az √ºzenet√©t! Megkaptam √©s a lehet≈ë leghamarabb v√°laszolni fogok. V√°rhat√≥an 24 √≥r√°n bel√ºl felveszem √ñnnel a kapcsolatot." 
      });
    } catch (error) {
      if (error instanceof z.ZodError) {
        res.status(400).json({
          success: false,
          message: "Hib√°s adatok",
          errors: error.errors.map(err => ({
            field: err.path.join('.'),
            message: err.message
          }))
        });
      } else {
        res.status(500).json({
          success: false,
          message: "Szerver hiba t√∂rt√©nt. K√©rj√ºk pr√≥b√°lja √∫jra k√©s≈ëbb."
        });
      }
    }
  });

  // Get contact messages (for admin purposes)
  app.get("/api/contact-messages", async (req, res) => {
    try {
      const messages = await storage.getContactMessages();
      res.json(messages);
    } catch (error) {
      res.status(500).json({
        success: false,
        message: "Hiba t√∂rt√©nt az √ºzenetek bet√∂lt√©se sor√°n."
      });
    }
  });

  const httpServer = createServer(app);
  return httpServer;
}
